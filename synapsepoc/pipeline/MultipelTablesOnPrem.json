{
	"name": "MultipelTablesOnPrem",
	"properties": {
		"activities": [
			{
				"name": "Get Tables",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "select name as 'TableName'\nfrom sys.tables\nwhere name in ('DimAccount', 'DimCurrency', 'DimCustomer', 'DimDate', 'DimGeography', 'DimProduct', 'DimProductCategory','DimProductSubcategory','DimReseller','DimSalesReason','FactInternetSales')\n",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ASD01Tables",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Loop Each Table",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Tables",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@array(activity('Get Tables').output.value)",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "@concat('SELECT * FROM ', string(item().TableName))",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "SqlDWSink",
									"allowPolyBase": true,
									"polyBaseSettings": {
										"rejectValue": 0,
										"rejectType": "value",
										"useTypeDefault": true
									}
								},
								"enableStaging": true,
								"stagingSettings": {
									"linkedServiceName": {
										"referenceName": "AzureDataLakeStorageWithoutParameters",
										"type": "LinkedServiceReference"
									},
									"path": "staging"
								}
							},
							"inputs": [
								{
									"referenceName": "ASD01Tables",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "AzureSynapseAnalytics",
									"type": "DatasetReference",
									"parameters": {
										"schema": {
											"value": "@string('SalesMigration')",
											"type": "Expression"
										},
										"table": {
											"value": "@string(item().TableName)",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"annotations": []
	}
}